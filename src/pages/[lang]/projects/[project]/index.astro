---
import { createSupabaseServerClient } from '@backend/supabaseServerClient';
import { getMyProfile, listMyInvites } from '@backend/crud';
import { getAvailableLayers, listMyProjectsExtended } from '@backend/helpers';
import { getLangFromUrl, getTranslations } from '@i18n';
import { ProjectHome } from '@apps/project-home';
import { getProjectExtended, listDocumentsInProject } from '@backend/helpers';
import BaseLayout from '@layouts/BaseLayout.astro';

const lang = getLangFromUrl(Astro.url);

const supabase = await createSupabaseServerClient(Astro.request, Astro.cookies);

if (!supabase) {
  return Astro.redirect(`/${lang}/sign-in?redirect-to=${Astro.url.pathname}`);
}

const profile = await getMyProfile(supabase);
if (profile.error || !profile.data) {
  const error = await fetch(`${Astro.url}/500`);
  return new Response(error.body, { headers: error.headers, status: 500 });
}

const projectId = Astro.params.project;

const project = await getProjectExtended(supabase, projectId as string);

if (project.error || !project.data) {
  const error = await fetch(`${Astro.url}/404`);
  return new Response(error.body, {
    headers: { 'Content-Type': 'text/html;charset=utf-8' },
    status: 404,
    statusText: 'Not Found',
  });
}

const documents = await listDocumentsInProject(supabase, projectId as string);

if (documents.error) {
  const path = Astro.url.protocol + '//' + Astro.url.host;
  const error = await fetch(`${path}/500`);
  return new Response(error.body, { headers: error.headers, status: 500 });
}

const i18n = getTranslations(Astro.request, 'project-home');

const invitations = await listMyInvites(supabase);

const projects = await listMyProjectsExtended(supabase);

const availableLayers = await getAvailableLayers(supabase, projectId as string);
---

<BaseLayout title='Projects Home'>
  <ProjectHome
    client:only
    i18n={i18n}
    projects={projects.data}
    project={project.data}
    documents={documents.data}
    user={profile.data}
    invitations={invitations.data}
    availableLayers={availableLayers.data}
  />
</BaseLayout>
