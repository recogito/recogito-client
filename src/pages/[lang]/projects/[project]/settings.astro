---
import { ProjectSettings } from '@apps/project-settings';
import BaseLayout from '@layouts/BaseLayout.astro';
import { createSupabaseServerClient } from '@backend/supabaseServerClient';
import { getMyProfile, listPendingInvitations } from '@backend/crud';
import PluginRegistry from '@components/Plugins/PluginRegistry';
import { getLangFromUrl, getTranslations } from '@i18n';
import {
  getProjectExtended,
  listMyProjectsExtended,
  getInstalledPlugins,
} from '@backend/helpers';

const lang = getLangFromUrl(Astro.url);

const i18n = getTranslations(Astro.request, 'project-settings');

const supabase = await createSupabaseServerClient(Astro.cookies);

const projectId = Astro.params.project;

const profile = await getMyProfile(supabase);
if (profile.error || !profile.data) {
  return Astro.redirect(`/${lang}/sign-in`);
}

const project = await getProjectExtended(supabase, projectId as string);
if (project.error || !project.data) {
  const error = await fetch(`${Astro.url}/404`);
  return new Response(error.body, {
    headers: { 'Content-Type': 'text/html;charset=utf-8' },
    status: 404,
    statusText: 'Not Found',
  });
}

const invitations = await listPendingInvitations(supabase, projectId as string);

if (project.error || invitations.error) {
  const error = await fetch(`${Astro.url}/404`);
  return new Response(error.body, {
    headers: { 'Content-Type': 'text/html;charset=utf-8' },
    status: 404,
    statusText: 'Not Found',
  });
}

const projects = await listMyProjectsExtended(supabase);
const installedPlugins = await getInstalledPlugins(
  supabase,
  projectId as string
);
if (installedPlugins.error || !installedPlugins.data) {
  const error = await fetch(`${Astro.url}/500`);
  return new Response(error.body, { headers: error.headers, status: 500 });
}
---
<BaseLayout title='Settings'>
  <ProjectSettings
    client:load
    i18n={i18n}
    project={project.data}
    invitations={invitations.data}
    me={profile.data}
    projects={projects.data}
    availablePlugins={PluginRegistry.listAvailablePlugins()}
    installedPlugins={PluginRegistry.resolvePlugins(installedPlugins.data)}
  />
</BaseLayout>

<style>
  h1 {
    padding-left: 40px !important;
  }
</style>
