---
import BaseLayout from '@layouts/BaseLayout.astro';
import { createSupabaseServerClient } from '@backend/supabaseServerClient';
import { getLangFromUrl, getTranslations } from '@i18n';
import { getMyProfile } from '@backend/crud/profiles';
import { UserManagement } from '@apps/user-management';
import { getProfilesExtended } from '../../../backend/helpers/profileHelpers';
import { getOrgGroups } from '../../../backend/crud/groups';

const lang = getLangFromUrl(Astro.url);

const supabase = await createSupabaseServerClient(Astro.cookies);

const { error, data } = await getMyProfile(supabase);
if (error) {
  return Astro.redirect(`/${lang}/sign-in?redirect-to=${Astro.url.pathname}`);
}

if (!data.isOrgAdmin) {
  return Astro.redirect(`/${lang}/projects`);
}

const me = data;
let profiles;

const { error: errorProfiles, data: profData } =
  await getProfilesExtended(supabase);

if (errorProfiles) {
  console.log(errorProfiles);
  const error = await fetch(`${Astro.url}/500`);
  return new Response(error.body, { headers: error.headers, status: 500 });
}

profiles = profData;

const { error: groupsError, data: groups } = await getOrgGroups(supabase);

if (groupsError) {
  console.log(groupsError);
  const error = await fetch(`${Astro.url}/500`);
  return new Response(error.body, { headers: error.headers, status: 500 });
}

const canInviteUsers = import.meta.env.PUBLIC_ENABLE_USER_INVITE === 'TRUE';
---

<BaseLayout title='User Management'>
  <UserManagement
    i18n={getTranslations(Astro.request, 'user-management')}
    profiles={profiles}
    me={me}
    groups={groups}
    canInvite={canInviteUsers}
    client:only='react'
  />
</BaseLayout>
