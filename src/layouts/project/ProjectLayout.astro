---
import HeaderLayout from '@layouts/HeaderLayout.astro';
import { ProjectSidebar } from './ProjectSidebar';
import { getLangFromUrl, getTranslations } from '@i18n';
import type {
  ExtendedAssignmentData,
  ExtendedProjectData,
  MyProfile,
} from 'src/Types';

export interface Props {
  active: string;

  project: ExtendedProjectData;

  assignment?: ExtendedAssignmentData;

  user: MyProfile;
}

const { active, assignment, project, user } = Astro.props;

const lang = getLangFromUrl(Astro.url);

const i18n = getTranslations(Astro.request, 'project-sidebar');

const cookie = Astro.cookies.get('x-project-sidebar-collapsed');
---

<HeaderLayout title={project.name}>
  <div class='project-dashboard-container'>
    <ProjectSidebar
      client:load
      active={active}
      collapsed={cookie.value === 'true'}
      i18n={i18n}
      me={user}
      project={project}
    />

    <div class='container'>
      <header>
        <nav class='breadcrumbs' aria-label='breadcrumbs'>
          <ol>
            <li>
              <a href=`/${lang}/projects`>{i18n.t['Projects']}</a>
            </li>

            <li>
              <a href=`/${lang}/projects/${project.id}`>
                {
                  project.name.length > 30
                    ? `${project.name.slice(0, 30)}...`
                    : project.name
                }
              </a>
            </li>

            <li>
              {
                assignment ? (
                  <a href={`/${lang}/projects/${project.id}/assignments`}>
                    {i18n.t['Assignments']}
                  </a>
                ) : (
                  <a>{i18n.t[active]}</a>
                )
              }
            </li>

            {
              assignment && (
                <li>
                  <a>{assignment.name}</a>
                </li>
              )
            }
          </ol>
        </nav>
      </header>
      <main>
        <slot />
      </main>
    </div>
  </div>
</HeaderLayout>

<style>
  .project-dashboard-container {
    display: flex;
    flex-direction: row;
    height: 100%;
    position: relative;
  }

  body {
    display: flex;
    flex-direction: row;
    min-height: 100vh;
    position: relative;
  }

  .container {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    min-height: 100%;
    position: relative;
    overflow-y: scroll;
  }

  header {
    align-items: center;
    border-bottom: 1px solid var(--gray-200);
    box-sizing: border-box;
    display: flex;
    flex: 0 0 auto;
    height: 50px;
    padding: 0 40px;
  }

  main {
    box-sizing: border-box;
    display: flex;
    flex-grow: 1;
    margin: 0 auto;
    max-width: 52rem;
    padding: 0;
    position: relative;
    width: 100%;
  }
</style>
